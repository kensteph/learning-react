What is a component?
A component is a bundle of markup, styles, and logic that controls everything about a specific part of the UI (User Interface).

Mechanism of reuse
Traditional HTML doesn't really have a way to reuse chunk of markup. Many languages use "partilas" to acheive this. A partial is a 
chunk of HTML that can be inserted into another HTML document.

-In CSS the main mechanism we have for reuse is the "class".
-In React, components are the main mechanism of reuse. Instead of partials for HTML, classes for CSS, and functions for JavaScript,
We create a component that bundles up all 3, and allows us to create a library of high-level reusable UI elements.

Thinking in components

Basic Syntax
* When you create a react component, You have to start with a Capital Letter.

Why using a Capital Letter to start a component ?
* The reason is simple. As we already kknow, The JSX code compiled into JavaScript and a component is a function. If we create our
component with a lower case, React would render an HTML tag instead of processing it as a component. That is why, it's very important to
use a Capital Letter at the bigining.Use Camel Case to create component. Ex: LoginButton ==> good! login_button ==> Bad.

*When you create a component, you can use arrow or traditional functions.It doesn't matter.
 
 //Arrow Function
 const LoginButton = () =>{
  return (
    <button>Login</button>
  )
 }

 //Traditional Function
 function LoginButton (){
  return (
    <button>Login</button>
  )
 }

PROPS
Props are like argument to a function. They allows us to pass data to our compenents,so that the components 
can include customizations based on the data.

* Props are objects. That why we can destructure them.For example :
Instead of :
const Greeting = (props) =>{
...  
}
You can do : 
const Greeting = ({name,gender...}) =>{
...  
}

*This approch is very useful because it allows us to provide default value to our props.
const Greeting = ({name='world',gender...}) =>{
...  
}

THE CHIlDREN PROP